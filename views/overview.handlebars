
    <!--- Challenges --->
    <div id="challengelist" class="section container-fluid bg-secondary pt-5 min-vh-100">
        <h1>Overview of challenges</h1>
        <div class="container mt-5 bg-light border rounded-2 p-4">
          <div class="row">
            <div class="col-lg-3 col-md-12">
              <canvas id="circleDiagram"></canvas>
            </div>
            <div id="challengelist-container" class="col"></div>
          </div>
        </div>
    </div>


    <!----------------------------------
    |||      challengelist-container          |||
    ------------------------------------>

    <script>
      function fetchChallengeList() {
        loadSettings();
        fetchAndRegisterPartial("challenge-description-card");

        // Load both the template and the context data concurrently using Promise.all
        Promise.all([
          fetchPartial('challenge-list'),
          fetchContextData('/api/lists/'+globalSettings.list)
        ])
        .then(([templateSource, context]) => {

          // Compile the template with Handlebars
          const template = Handlebars.compile(templateSource);

          // Generate the HTML by applying the context to the template
          const html = template(context.elements);

          // Insert the generated HTML into the DOM
          document.getElementById('challengelist-container').innerHTML = html;
          drawCircleDiagram(context.elements);
        })
        .catch(error => {
          console.error('Error:', error);
        });      
      }

        function drawCircleDiagram(data){
          const ctx = document.getElementById('circleDiagram').getContext('2d');
          new Chart(ctx, {
              type: 'pie',
              data: {
                  labels: data.map(item => item.name),
                  datasets: [{
                      data: data.map(item => item.weight),
                      backgroundColor: data.map(item => item.color),
                  }]
              },
              options: {
                  responsive: true,
                  plugins: {
                      tooltip: {
                          enabled: true
                      },
                      legend: {
                        display: false
                      }
                  }
              }
          });
        }

        // Display content when the page loads
        document.addEventListener('DOMContentLoaded', fetchChallengeList);
    </script>