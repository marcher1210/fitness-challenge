

    

    <!--- Challenge --->
    <div id="challenge" class="section container-fluid bg-light bg-gradient pt-5 min-vh-100">
        <div class="container px-4 py-5 mt-5" id="main-container">
            
        </div>
    </div>

    


  


    
  
  <!----------------------------------
  |||      participant-container
  ------------------------------------>
    <script id="template-participant-container" type="text/x-handlebars-template">
    <h2 class="pb-2 border-bottom mt-5">{{name}}</h2>
    <div class="row g-0" id="participant-{{number}}">
      <div class="col m-2">
        {{> daycard class='today' dayname='Today' date='...'}}
      </div>
      <div class="col m-2">
        {{> daycard class='tomorrow' dayname='Tomorrow' date='...'}}
      </div>
    </div>
    </script> 
  
  









  <!----------------------------------
  |||      Render functionality    |||
  ------------------------------------>
    <script>
    function renderTemplates(){
      renderParticipant();
    }
    function renderParticipant(){

            // Compile the Handlebars template
            const templateSource = document.getElementById('template-participant-container').innerHTML;
            const template = Handlebars.compile(templateSource);
            
            
            // Pass the data to the template
      var compiledHtml = '';
            for (var i = 0; i < globalSettings.participants.length; i++) {
              compiledHtml += template({number:i+1, name:globalSettings.participants[i]});
            }
            
            // Insert the compiled HTML into the page
            document.getElementById('main-container').innerHTML = compiledHtml;
    }


    </script>


  <!----------------------------------
  |||        Fetch functionality    |||
  ------------------------------------>
    <script>
    async function fetchData(){
      const today = new Date();
      const tomorrow =  new Date();
            tomorrow.setDate(tomorrow.getDate() + 1);

            for (var i = 0; i < globalSettings.participants.length; i++) {
              fetchCard(i+1, globalSettings.participants[i], 'today', today);
              fetchCard(i+1, globalSettings.participants[i], 'tomorrow', tomorrow);
            }
    }

    async function fetchCard(id, participant, dayname, date){
      try {
                const response = await fetch('/api/lists/'+globalSettings.list+'/element?userseed='+participant+'&date='+date.toISOString().split('T')[0]);
                if (!response.ok) {
                    throw new Error('Network response was not ok');
                }
                const data = await response.json();

                const container = document.getElementById('participant-'+id).getElementsByClassName(dayname+'-card')[0];
                
        container.getElementsByClassName('card-text')[0].innerHTML = data.element.name;
        //container.getElementsByClassName('card-footer')[0].innerHTML = data.date.mediumString;
        container.getElementsByClassName('card-img-top')[0].src = data.element.imgUrl;
        
            } catch (error) {
                console.error('There has been a problem with your fetch operation:', error);
            }
    }

    
  </script>


    <script>
      let currentHistoryParticipantId = 0, currentHistoryDays = 30;
    function loadMain(){ 
      loadSettings();
      renderTemplates();
      fetchData();
      fetchHistory();
      fetchChallengeList();
    }
        // Display content when the page loads
        document.addEventListener('DOMContentLoaded', loadMain);
    </script>
